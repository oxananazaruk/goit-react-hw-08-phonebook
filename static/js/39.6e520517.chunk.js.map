{"version":3,"file":"static/js/39.6e520517.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","components/ContactCard/ContactCard.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  font: inherit;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 14px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  min-width: 100px;\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.lg};\n  padding: 16px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filters.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  FormContainer,\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormButton,\n} from './ContactForm.styled';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'Phone number is not valid. Min 7 numbers (101-01-01)'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          if (\n            contacts.find(\n              contact =>\n                contact.name.toLocaleLowerCase() ===\n                values.name.toLocaleLowerCase()\n            )\n          ) {\n            return toast.error(`${values.name} is olready in your contacts`);\n          }\n          dispatch(addContact(values));\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormGroup>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Number\n            <Field type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormGroup>\n\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: square;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\n\nexport const ContactCard = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <span>{name}: </span>\n      <span>{number} </span>\n      <button onClick={handleDelete}>Delete</button>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { List, ListItem } from './ContactsList.styled';\nimport { ContactCard } from '../ContactCard/ContactCard';\nimport { selectVisibleContacts } from '../../redux/selectors';\n\nexport const ContactsList = () => {\n  const items = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.id}>\n          <ContactCard contact={item} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const FindGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const Findinput = styled.input`\n  padding: 4px;\n  font: inherit;\n`;\n","import { FilterContainer, FindGroup, Findinput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { findContact } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = filters => dispatch(findContact(filters));\n\n  return (\n    <FilterContainer>\n      <FindGroup>\n        Find contacts by name\n        <Findinput\n          type=\"text\"\n          name=\"filters\"\n          onChange={evt => handleFilter(evt.target.value)}\n        />\n      </FindGroup>\n    </FilterContainer>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n} from '../redux/selectors';\nimport { fetchContacts } from '../redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {error && <b>Somesing went wrong! Please, try reload this page.</b>}\n      {contacts.length > 0 && <ContactsList />}\n    </div>\n  );\n}\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Form","FormikForm","_templateObject2","Field","FormikField","_templateObject3","FormGroup","_templateObject4","ErrorMessage","FormikError","_templateObject5","p","theme","colors","red","FormButton","_templateObject6","black","background","radii","lg","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filters","filter","contact","toLocaleLowerCase","includes","formSchema","Yup","shape","min","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","toast","addContact","resetForm","_jsxs","type","component","List","spacing","ListItem","ContactCard","_ref","_ref$contact","id","onClick","deleteContact","ContactsList","item","FilterContainer","FindGroup","Findinput","Filter","onChange","evt","target","findContact","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}