{"version":3,"file":"static/js/883.96fd8764.chunk.js","mappings":"+QAOaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEAM1BC,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAkBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oEAMzBI,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAmBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6CAK3BO,EAAYT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oEAMxBS,GAAeX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAmBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6CACpC,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,GAAG,IAIrBC,EAAalB,EAAAA,GAAAA,OAAamB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,yQAI5B,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,KAAK,IACd,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,UAAU,IACjC,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,EAAE,I,SC5BlCC,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,YACjDC,MAAOL,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,YAClDE,SAAUN,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,cAG1CG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACpC,EAAa,CAAAqC,UACZD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEX,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDQ,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBT,GAASU,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAER,UAEFS,EAAAA,EAAAA,MAAC1C,EAAI,CAAAiC,SAAA,EACHS,EAAAA,EAAAA,MAACpC,EAAS,CAAA2B,SAAA,CAAC,QAETD,EAAAA,EAAAA,KAAC7B,EAAK,CAACwC,KAAK,OAAOnB,KAAK,UACxBQ,EAAAA,EAAAA,KAACxB,EAAY,CAACgB,KAAK,QAAQoB,UAAU,aAGvCF,EAAAA,EAAAA,MAACpC,EAAS,CAAA2B,SAAA,CAAC,SAETD,EAAAA,EAAAA,KAAC7B,EAAK,CAACwC,KAAK,QAAQnB,KAAK,WACzBQ,EAAAA,EAAAA,KAACxB,EAAY,CAACgB,KAAK,QAAQoB,UAAU,aAGvCF,EAAAA,EAAAA,MAACpC,EAAS,CAAA2B,SAAA,CAAC,YAETD,EAAAA,EAAAA,KAAC7B,EAAK,CAACwC,KAAK,WAAWnB,KAAK,cAC5BQ,EAAAA,EAAAA,KAACxB,EAAY,CAACgB,KAAK,WAAWoB,UAAU,aAG1CZ,EAAAA,EAAAA,KAACjB,EAAU,CAAC4B,KAAK,SAAQV,SAAC,mBAKpC,ECrDe,SAASY,IACtB,OACEH,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACED,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAAAb,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForn/RegisterForm.styled.js","components/RegisterForn/RegisterForm.js","pages/Register.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  font: inherit;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 14px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  min-width: 100px;\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.lg};\n  padding: 16px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  FormContainer,\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormButton,\n} from './RegisterForm.styled';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  email: Yup.string().min(2, 'Too Short!').required('Required'),\n  password: Yup.string().min(7, 'Too Short!').required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          dispatch(register(values));\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormGroup>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Email\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Password\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"span\" />\n          </FormGroup>\n\n          <FormButton type=\"submit\">Register</FormButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForn/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Form","FormikForm","_templateObject2","Field","FormikField","_templateObject3","FormGroup","_templateObject4","ErrorMessage","FormikError","_templateObject5","p","theme","colors","red","FormButton","_templateObject6","black","background","radii","lg","formSchema","Yup","shape","name","min","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","_jsxs","type","component","Register","Helmet"],"sourceRoot":""}